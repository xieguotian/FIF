name: "CIFAR10_full"
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  transform_param {
  #force_color: true
  mean_file: "proto/conv_mask_cifar/cifar100_mean_pre.binaryproto"
#  mirror: true
	multi_scale_param{
		is_multi_scale: true
		min_length: 32
		max_length: 32
	}
	scale: 0.103220
  }
  data_param {
    source: "proto/conv_mask_cifar/cifar100_pre_train_lmdb"
    batch_size: 128
	backend: LMDB
	shuffle: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  transform_param {
  #force_color: true
  mean_file: "proto/conv_mask_cifar/cifar100_mean_pre.binaryproto"
	multi_scale_param{
		is_multi_scale: true
		min_length: 32
		max_length: 32
	}  
	scale: 0.103220
  }  
  data_param {
    source: "proto/conv_mask_cifar/cifar100_pre_test_lmdb"
    batch_size: 100
	backend: LMDB
  }
 
  include: { phase: TEST }
}
#layer {
#  name: "data"
#  type: "Data"
#  top: "data"
#  top: "label"
#  include {
#    phase: TRAIN
#  }
#  transform_param {
#    mirror: true
#    crop_size: 32
#	mean_file: "proto/ResNet50/cifar10_mean.binaryproto"
#	force_color: true
#  }
#  data_param {
#	source: "classification/data/cifar_train_png_lmdb"
#    batch_size: 128 # 2 gpu for batch size of 128
#    backend: LMDB
#	shuffle: true
#  }
#}
#layer {
#  name: "data"
#  type: "Data"
#  top: "data"
#  top: "label"
#  include {
#    phase: TEST
#  }
#  transform_param {
#    mirror: false
#    crop_size: 32
#	mean_file: "proto/ResNet50/cifar10_mean.binaryproto"
#	force_color: true
#  }
#  data_param {
#	source: "classification/data/cifar_test_png_lmdb"
#    batch_size: 100 # 2 gpu for batch size of 256
#    backend: LMDB
#  }
#}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"

  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
    num_output: 192
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "cccp1"
  type: "Convolution"
  bottom: "conv1"
  top: "cccp1"
  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
    num_output: 160
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp1"
  type: "ReLU"
  bottom: "cccp1"
  top: "cccp1"
}
layer {
  name: "cccp2"
  type: "Convolution"
  bottom: "cccp1"
  top: "cccp2"
  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
    num_output: 96
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp2"
  type: "ReLU"
  bottom: "cccp2"
  top: "cccp2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "cccp2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "drop3"
  type: "Dropout"
  bottom: "pool1"
  top: "drop3"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "drop3"
  top: "conv2"
  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
    num_output: 192
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "cccp3"
  type: "Convolution"
  bottom: "conv2"
  top: "cccp3"
  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
    num_output: 192
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp3"
  type: "ReLU"
  bottom: "cccp3"
  top: "cccp3"
}
layer {
  name: "cccp4"
  type: "Convolution"
  bottom: "cccp3"
  top: "cccp4"
  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
    num_output: 192
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp4"
  type: "ReLU"
  bottom: "cccp4"
  top: "cccp4"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "cccp4"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "pool2"
  top: "drop6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "drop6"
  top: "conv3"
  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
	#engine: CUDNNMASK
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "cccp5"
  type: "Convolution"
  bottom: "conv3"
  top: "cccp5"
  param {
		lr_mult: 1
		decay_mult: 1
	}  
  param {
		lr_mult: 2
		decay_mult: 0
	}	
  convolution_param {
    num_output: 192
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp5"
  type: "ReLU"
  bottom: "cccp5"
  top: "cccp5"
}
layer {
  name: "cccp6"
  type: "Convolution"
  bottom: "cccp5"
  top: "cccp6"
  param {
		lr_mult: 0.1
		decay_mult: 1
	}  
  param {
		lr_mult: 0.1
		decay_mult: 0
	}	  
  convolution_param {
    num_output: 100
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu_cccp6"
  type: "ReLU"
  bottom: "cccp6"
  top: "cccp6"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "cccp6"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 8
    stride: 1
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "pool3"
  bottom: "label"
  top: "accuracy"
  #include: { phase: TEST }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "pool3"
  bottom: "label"
  top: "loss"
}